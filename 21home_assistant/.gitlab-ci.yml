stages:
  - deploy

deploy_to_github:
  stage: deploy
  interruptible: true
  tags:
    - macos

  only:
    - main

  variables:
    GIT_STRATEGY: clone
    GITHUB_REPO: 21energy/21energy_heater_control
    GITHUB_BRANCH: main


  before_script:
    - which git || brew install git
    - which curl || brew install curl
    - which bash || brew install bash

  script:
    - EXCLUDED=(".gitlab-ci.yml""./scripts/""./config/")
    - EXCLUDE_ARGS=()
    - |
      for item in "${EXCLUDESD[@]}"; do
      EXCLUDE_ARGS+=(--exclude="$item")
      done

    # Also exclude any directory with ".git" in its name
    - EXCLUDE_ARGS+=(--exclude='.git/')
    - VERSION=$(jq -r '.version' custom_components/21energy_heater_control/manifest.json)
    - rm -rf ../export-repo
    - mkdir ../export-repo
    - cd ../export-repo

    # Initialize a new Git repo
    - git init
    - git config user.name "GitLab CI"
    - git config user.email "ci@example.com"
    - git remote add github https://$GITHUB_TOKEN@github.com/$GITHUB_REPO.git
    - git fetch github $GITHUB_BRANCH
    - git checkout -b $GITHUB_BRANCH github/$GITHUB_BRANCH
    - rsync -av "${EXCLUDE_ARGS[@]}" ../21home_assistant ./

    # Remove excluded files
    - for file in $EXCLUDED; do rm -f "$file"; done

    # Bump version in manifest.json

    - IFS='.' read -r major minor patch <<< "$VERSION"
    - NEW_VERSION="$major.$minor.$((patch + 1))"
    - jq --arg v "$NEW_VERSION" '.version = $v' custom_components/21energy_heater_control/manifest.json > tmp.json && mv tmp.json custom_components/21energy_heater_control/manifest.json

    # Commit version bump
    - git config user.name "GitLab CI"
    - git config user.email "ci@example.com"
    - git add -A
    - git commit -m "Release $NEW_VERSION" || echo "Nothing to commit"


    # Push to GitHub
    - git push github $GITHUB_BRANCH

    # Create GitHub Release
    - |
      curl -s -X POST https://api.github.com/repos/$GITHUB_REPO/releases \
        -H "Authorization: token $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        -d @- <<EOF
      {
        "tag_name": "$NEW_VERSION",
        "name": "$NEW_VERSION",
        "body": "Automated release from GitLab CI",
        "draft": false,
        "prerelease": false
      }
      EOF
    # Push version bump back to original GitLab repo (without excluding files)
    - cd ../21home_assistant
    - git config user.name "GitLab CI"
    - git config user.email "ci@21energy.com"
    - jq --arg v "$NEW_VERSION" '.version = $v' ./custom_components/21energy_heater_control/manifest.json > tmp.json && mv tmp.json ./custom_components/21energy_heater_control/manifest.json
    - git add ./custom_components/21energy_heater_control/manifest.json
    - git commit -m "Bump version to $NEW_VERSION" || echo "Nothing to commit"
    - git remote set-url origin https://ci:${CI_PUSH_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    - git push origin HEAD:refs/heads/main --push-option=ci.skip
#  after_script:
#    - rm -rf ../export-repo || true